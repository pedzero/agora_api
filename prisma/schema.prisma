generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  name           String
  email          String   @unique
  username       String   @unique
  passwordHash   String
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  posts          Post[]
  following      Follow[] @relation("UserFollowing")
  followers      Follow[] @relation("UserFollowers")
}

model Follow {
  id           String   @id @default(uuid())
  followerId   String
  followingId  String
  status       FollowStatus @default(PENDING)
  createdAt    DateTime @default(now())

  follower   User @relation("UserFollowing", fields: [followerId], references: [id], onDelete: Cascade)
  following  User @relation("UserFollowers", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
}

enum FollowStatus {
  PENDING
  ACCEPTED
}

model Post {
  id          String    @id @default(uuid())
  description String?
  latitude    Float
  longitude   Float
  visibility  PostVisibility @default(PUBLIC)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  photos    Photo[]
}

enum PostVisibility {
  PUBLIC
  PRIVATE
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}
